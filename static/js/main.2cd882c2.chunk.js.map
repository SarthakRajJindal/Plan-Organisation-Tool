{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","components/ProjForm.js","components/ProjButton.js","components/ProjCard.js","components/ProjOpenForm.js","components/ProjCreate.js","components/ProjList.js","components/ProjBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","components/pages/About.js","components/navbar/Navbar.js","routes/index.js","components/App.js","serviceWorker.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/store.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","Container","styled","div","StyledCard","Card","StyledTextArea","Textarea","ButtonContainer","StyledIcon","Icon","ProjForm","React","memo","list","onChange","closeForm","children","placeholder","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","ProjButton","onClick","variant","CardContainer","EditButton","DeleteButton","ProjCard","index","useState","isEditing","setIsEditing","cardText","setText","handleChange","target","saveCard","preventDefault","newText","editCard","handleDeleteCard","console","log","deleteCard","String","provided","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","ProjOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","style","flexShrink","ProjCreate","state","formOpen","openForm","setState","handleInputChange","handleAddList","props","handleAddCard","renderOpenForm","buttonText","this","PureComponent","ListContainer","Math","random","StyledInput","input","TitleContainer","ListTitle","h4","cards","listTitle","setListTitle","handleFocus","select","handleFinishEditing","newTitle","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","droppableProps","map","card","key","ListsContainer","ProjBoard","onDragEnd","result","destination","source","match","params","lists","board","boards","listOrder","direction","listCards","cardID","Thumbnail","floor","Title","BoardThumbnail","Thumbnails","Particle","CreateTitle","h3","CreateInput","boardOrder","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","class","to","textDecoration","textAlign","padding","borderRadius","useStyles","makeStyles","theme","about","spacing","margin","backgroundColor","heading","para","About","classes","Paper","className","component","m","hr","width","height","a","color","cursor","Navbar","AppBar","position","Toolbar","Divider","orientation","AppRouter","basename","process","path","exact","Home","App","Boolean","window","location","hostname","initialState","listsReducer","action","newList","newState","push","splice","listStart","listEnd","newCards","filter","cardsReducer","newCard","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","boardOrderReducer","activeBoardReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","GlobalStyle","createGlobalStyle","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cd882c2.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addList = title => {\r\n    return (dispatch, getState) => {\r\n        const boardID = getState().activeBoard;\r\n        const id = uuid();\r\n        dispatch({\r\n            type: CONSTANTS.ADD_LIST,\r\n            payload: { title, boardID, id }\r\n        });\r\n    };\r\n};\r\n\r\nexport const sort = (\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId,\r\n    type\r\n) => {\r\n    return (dispatch, getState) => {\r\n        const boardID = getState().activeBoard;\r\n        dispatch({\r\n            type: CONSTANTS.DRAG_HAPPENED,\r\n            payload: {\r\n                droppableIdStart,\r\n                droppableIdEnd,\r\n                droppableIndexEnd,\r\n                droppableIndexStart,\r\n                draggableId,\r\n                type,\r\n                boardID\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_LIST_TITLE,\r\n        payload: {\r\n            listID,\r\n            newTitle\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteList = listID => {\r\n    return (dispatch, getState) => {\r\n        const boardID = getState().activeBoard;\r\n        return dispatch({\r\n            type: CONSTANTS.DELETE_LIST,\r\n            payload: {\r\n                listID,\r\n                boardID\r\n            }\r\n        });\r\n    };\r\n};\r\n","import { CONSTANTS } from \".\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addCard = (listID, text) => {\r\n    const id = uuid();\r\n    return {\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: { text, listID, id }\r\n    };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_CARD,\r\n        payload: { id, listID, newText }\r\n    };\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n    return {\r\n        type: CONSTANTS.DELETE_CARD,\r\n        payload: { id, listID }\r\n    };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\nexport * from \"./boardActions\";\r\n\r\nexport const CONSTANTS = {\r\n    ADD_CARD: \"ADD_CARD\",\r\n    ADD_LIST: \"ADD_LIST\",\r\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n    EDIT_CARD: \"EDIT_CARD\",\r\n    DELETE_CARD: \"DELETE_CARD\",\r\n    EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n    DELETE_LIST: \"DELETE_LIST\",\r\n    SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\r\n    ADD_BOARD: \"ADD_BOARD\"\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ProjForm = React.memo(\r\n    ({ list, text = \"\", onChange, closeForm, children }) => {\r\n        const placeholder = list\r\n            ? \"Enter bucket title...\"\r\n            : \"Enter a title for this bucket...\";\r\n\r\n        return (\r\n            <Container>\r\n                <StyledCard>\r\n                    <StyledTextArea\r\n                        placeholder={placeholder}\r\n                        autoFocus\r\n                        value={text}\r\n                        onChange={e => onChange(e)}\r\n                        onBlur={closeForm}\r\n                    />\r\n                </StyledCard>\r\n                <ButtonContainer>\r\n                    {children}\r\n                    <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n                </ButtonContainer>\r\n            </Container>\r\n        );\r\n    }\r\n);\r\n\r\nexport default ProjForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: black;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst ProjButton = ({ children, onClick }) => {\r\n    return (\r\n        <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n            {children}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default ProjButton;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ProjForm from \"./ProjForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport ProjButton from \"./ProjButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ProjCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [cardText, setText] = useState(text);\r\n\r\n    const closeForm = e => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const handleChange = e => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const saveCard = e => {\r\n        e.preventDefault();\r\n\r\n        dispatch(editCard(id, listID, cardText));\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const handleDeleteCard = e => {\r\n        console.log(listID);\r\n        dispatch(deleteCard(id, listID));\r\n    };\r\n\r\n    const renderEditForm = () => {\r\n        return (\r\n            <ProjForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n                <ProjButton onClick={saveCard}>Save</ProjButton>\r\n            </ProjForm>\r\n        );\r\n    };\r\n\r\n    const renderCard = () => {\r\n        return (\r\n            <Draggable draggableId={String(id)} index={index}>\r\n                {provided => (\r\n                    <CardContainer\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        onDoubleClick={() => setIsEditing(true)}\r\n                    >\r\n                        <Card>\r\n                            <EditButton\r\n                                onMouseDown={() => setIsEditing(true)}\r\n                                fontSize=\"small\"\r\n                            >\r\n                                edit\r\n              </EditButton>\r\n                            <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                                delete\r\n              </DeleteButton>\r\n\r\n                            <CardContent>\r\n                                <Typography>{text}</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </CardContainer>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    };\r\n\r\n    return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(ProjCard);\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProjOpenForm = ({ list, children, onClick }) => {\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"black\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n    return (\r\n        <OpenFormButton onClick={onClick}>\r\n            <Icon>add</Icon>\r\n            <p style={{ flexShrink: 0 }}>{children}</p>\r\n        </OpenFormButton>\r\n    );\r\n};\r\n\r\nexport default ProjOpenForm;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ProjButton from \"./ProjButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from '../actions';\r\nimport styled from \"styled-components\";\r\nimport ProjForm from \"./ProjForm\";\r\nimport ProjOpenForm from \"./ProjOpenForm\";\r\n\r\nclass ProjCreate extends React.PureComponent {\r\n    state = {\r\n        formOpen: false,\r\n        text: \"\"\r\n    };\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n            formOpen: true\r\n        });\r\n    };\r\n\r\n    closeForm = e => {\r\n        this.setState({\r\n            formOpen: false\r\n        });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    };\r\n\r\n    handleAddList = () => {\r\n        const { dispatch } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            });\r\n            dispatch(addList(text));\r\n        }\r\n\r\n        return;\r\n    };\r\n\r\n    handleAddCard = () => {\r\n        const { dispatch, listID } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            });\r\n            dispatch(addCard(listID, text));\r\n        }\r\n    };\r\n\r\n    renderOpenForm = () => {\r\n        const { list } = this.props;\r\n\r\n        const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n        const buttonTextOpacity = list ? 1 : 0.5;\r\n        const buttonTextColor = list ? \"black\" : \"inherit\";\r\n        const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n        const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      margin-left: 8px;\r\n      width: 300px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n        return (\r\n            <OpenFormButton onClick={this.openForm}>\r\n                <Icon>add</Icon>\r\n                <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n            </OpenFormButton>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.state;\r\n        const { list } = this.props;\r\n        return this.state.formOpen ? (\r\n            <ProjForm\r\n                text={text}\r\n                onChange={this.handleInputChange}\r\n                closeForm={this.closeForm}\r\n            >\r\n                <ProjButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n                    {list ? \"Add bucket\" : \"Add highlight\"}\r\n                </ProjButton>\r\n            </ProjForm>\r\n        ) : (\r\n                <ProjOpenForm list={list} onClick={this.openForm}>\r\n                    {list ? \"Add another bucket\" : \"Add another highlight\"}\r\n                </ProjOpenForm>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect()(ProjCreate);\r\n","import React, { useState } from \"react\";\r\nimport ProjCard from \"./ProjCard\";\r\nimport ProjCreate from \"./ProjCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nfunction getRandomColor() {\r\n    let color = \"hsl(\" + Math.random() * 360 + \", 100%, 75%)\";\r\n    return color;\r\n  }\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: ${getRandomColor};\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst ProjList = ({ title, cards, listID, index, dispatch }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [listTitle, setListTitle] = useState(title);\r\n\r\n    const renderEditInput = () => {\r\n        return (\r\n            <form onSubmit={handleFinishEditing}>\r\n                <StyledInput\r\n                    type=\"text\"\r\n                    value={listTitle}\r\n                    onChange={handleChange}\r\n                    autoFocus\r\n                    onFocus={handleFocus}\r\n                    onBlur={handleFinishEditing}\r\n                />\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const handleFocus = e => {\r\n        e.target.select();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        setListTitle(e.target.value);\r\n    };\r\n\r\n    const handleFinishEditing = e => {\r\n        setIsEditing(false);\r\n        dispatch(editTitle(listID, listTitle));\r\n    };\r\n\r\n    const handleDeleteList = () => {\r\n        dispatch(deleteList(listID));\r\n    };\r\n\r\n    return (\r\n        <Draggable draggableId={String(listID)} index={index}>\r\n            {provided => (\r\n                <ListContainer\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    <Droppable droppableId={String(listID)} type=\"card\">\r\n                        {provided => (\r\n                            <div>\r\n                                <div>\r\n                                    {isEditing ? (\r\n                                        renderEditInput()\r\n                                    ) : (\r\n                                            <TitleContainer onClick={() => setIsEditing(true)}>\r\n                                                <ListTitle>{listTitle}</ListTitle>\r\n                                                <DeleteButton onClick={handleDeleteList}>\r\n                                                    delete\r\n                      </DeleteButton>\r\n                                            </TitleContainer>\r\n                                        )}\r\n                                </div>\r\n                                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                    {cards.map((card, index) => (\r\n                                        <ProjCard\r\n                                            key={card.id}\r\n                                            text={card.text}\r\n                                            id={card.id}\r\n                                            index={index}\r\n                                            listID={listID}\r\n                                        />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                    <ProjCreate listID={listID} />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </ListContainer>\r\n            )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default connect()(ProjList);\r\n","import React, { PureComponent } from \"react\";\r\nimport ProjList from \"./ProjList\";\r\nimport { connect } from \"react-redux\";\r\nimport ProjCreate from \"./ProjCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort, setActiveBoard } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass ProjBoard extends PureComponent {\r\n    componentDidMount() {\r\n        // set active Proj board here\r\n        const { boardID } = this.props.match.params;\r\n\r\n        this.props.dispatch(setActiveBoard(boardID));\r\n    }\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        this.props.dispatch(\r\n            sort(\r\n                source.droppableId,\r\n                destination.droppableId,\r\n                source.index,\r\n                destination.index,\r\n                draggableId,\r\n                type\r\n            )\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { lists, cards, match, boards } = this.props;\r\n        const { boardID } = match.params;\r\n        const board = boards[boardID];\r\n        if (!board) {\r\n            return <p>Board not found</p>;\r\n        }\r\n        const listOrder = board.lists;\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <h2>{board.title}</h2>\r\n                <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                    {provided => (\r\n                        <ListsContainer\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {listOrder.map((listID, index) => {\r\n                                const list = lists[listID];\r\n                                if (list) {\r\n                                    const listCards = list.cards.map(cardID => cards[cardID]);\r\n\r\n                                    return (\r\n                                        <ProjList\r\n                                            listID={list.id}\r\n                                            key={list.id}\r\n                                            title={list.title}\r\n                                            cards={listCards}\r\n                                            index={index}\r\n                                        />\r\n                                    );\r\n                                }\r\n                            })}\r\n                            {provided.placeholder}\r\n                            <ProjCreate list />\r\n                        </ListsContainer>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lists: state.lists,\r\n    cards: state.cards,\r\n    boards: state.boards\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProjBoard);\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const setActiveBoard = id => {\r\n    return {\r\n        type: CONSTANTS.SET_ACTIVE_BOARD,\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport const addBoard = title => {\r\n    const id = uuid();\r\n    return {\r\n        type: CONSTANTS.ADD_BOARD,\r\n        payload: { title, id }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Thumbnail = styled.div`\r\n  height: 280px;\r\n  width: 280px;\r\n  background: ${'hsl('+Math.floor(Math.random()*361)+',50%,75%)'};\r\n  padding: 10px;\r\n  margin: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n  box-shadow: 0 2px 4px grey;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  color: black;\r\n  text-decoration: none;\r\n  text-transform: Uppercase\r\n`;\r\n\r\nconst BoardThumbnail = ({ title }) => {\r\n  console.log(title);\r\n  return (\r\n    <Thumbnail>\r\n      <Title>{title}</Title>\r\n    </Thumbnail>\r\n  );\r\n};\r\n\r\nexport default BoardThumbnail;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"../actions\";\r\nimport BoardThumbnail from \"./BoardThumbnail\";\r\n\r\nconst Thumbnails = styled.div`\r\n  flex: 1;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  background: #f0f0f0;\r\n`;\r\n\r\nconst Particle = styled.div`\r\n    position: absolute;\r\n \tborder-radius: 50%;\r\n\r\n     @for $i from 1 through 30 {\r\n        @keyframes particle-animation-#{$i} {\r\n            100% {\r\n                transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(100) * 1px));\r\n            }\r\n        }\r\n        \r\n        .particle:nth-child(#{$i}){\r\n            animation: particle-animation-#{$i} 60s infinite;\r\n            $size: random(5) + 5 + px;\r\n            opacity: random(100)/100;\r\n            height: $size;\r\n            width: $size;\r\n            animation-delay: -$i * .2s;\r\n            transform: translate3d((random(90) * 1vw), (random(90) * 1vh), (random(100) * 1px));\r\n            background: hsl(random(360), 70%, 50%);\r\n        }\r\n    }\r\n\r\n `;\r\n\r\nconst CreateTitle = styled.h3`\r\n  font-size: 48px;\r\n  color: black;\r\n  font-weight: bold;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  width: 300px;\r\n  height: 80px;\r\n  font-size: 22px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n`;\r\n\r\n\r\n\r\nconst Home = ({ boards, boardOrder, dispatch }) => {\r\n    // this is the home site that shows you your boards and you can also create a Board here.\r\n\r\n    const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        setNewBoardTitle(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(addBoard(newBoardTitle));\r\n    };\r\n\r\n    const renderCreateBoard = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit} style={{ textAlign: \"center\", padding: 30, borderRadius: 40 }}>\r\n                <CreateTitle>Create a new Panel</CreateTitle>\r\n                <CreateInput\r\n                    onChange={handleChange}\r\n                    value={newBoardTitle}\r\n                    placeholder=\"Your Panel's title...\"\r\n                    type=\"text\"\r\n                />\r\n            </form>\r\n        );\r\n    };\r\n    const renderBoards = () => {\r\n        return boardOrder.map(boardID => {\r\n            const board = boards[boardID];\r\n\r\n            return (\r\n                <Link\r\n                    key={boardID}\r\n                    to={`/${board.id}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                >\r\n                    <BoardThumbnail {...board} />\r\n                    <Particle />\r\n                </Link>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div class=\"bg\"></div>\r\n            <div class=\"bg bg2\"></div>\r\n            <div class=\"bg bg3\"></div>\r\n            <div class=\"content\">\r\n                {/* <HomeContainer> */}\r\n                    <Thumbnails>{renderBoards()}</Thumbnails>\r\n                    {renderCreateBoard()}\r\n                {/* </HomeContainer> */}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    boards: state.boards,\r\n    boardOrder: state.boardOrder\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React, { Fragment } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst About = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Paper className={classes.about}>\r\n                    <Typography component=\"h2\" m='2' className={classes.heading}>\r\n                        Features that are implementated in this application.\r\n                    </Typography>\r\n                    <Typography component=\"p\" className={classes.para}>\r\n                        1. User can create, delete and edit a to-do.\r\n                    </Typography>\r\n                    <Typography component=\"p\" className={classes.para}>\r\n                        2. They can also be able to mark a to-do done and vice-versa.\r\n                    </Typography>\r\n                    <Typography component=\"p\" className={classes.para}>\r\n                        3. They can alos create a to-do under a bucket. The user has the flexibility to name this bucket according to his/her choice.\r\n                    </Typography>\r\n                    <Typography component=\"p\" className={classes.para}>\r\n                        4. The user can drag and drop a todo item from one board to another.\r\n                    </Typography>\r\n                    <Typography component=\"p\" className={classes.para}>\r\n                        5. All the existing buckets the user has created should be given as options, next time the user tries to create a new bucket.\r\n                    </Typography>\r\n                </Paper>\r\n            </Container >\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    about: {\r\n        padding: theme.spacing(3, 2),\r\n        margin: theme.spacing(3, 2),\r\n        backgroundColor: '#cfe8fc',\r\n    },\r\n    heading: {\r\n        margin: '30px 0'\r\n    },\r\n    para: {\r\n        margin: '10px 0'\r\n    }\r\n}));\r\n\r\nexport default About;","import React, { Fragment } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport About from '../pages/About';\r\n\r\nconst useStyles = makeStyles({\r\n    hr: {\r\n        width: '0.5px',\r\n        height: '25px',\r\n        backgroundColor: '#fff',\r\n        margin: '0px 10px',\r\n    },\r\n    a: {\r\n        color: '#ffffff',\r\n        cursor: 'pointer',\r\n        textDecoration: 'none',\r\n    },\r\n});\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n\r\n            <AppBar position=\"static\" width='100%' color=\"secondary\">\r\n                <Toolbar >\r\n                    <Typography variant=\"h6\" >\r\n                        <Link to='/' className={classes.a}> Plan organization Tool </Link>\r\n                    </Typography>\r\n                    <Divider orientation=\"vertical\" className={classes.hr} />\r\n                    <Link to='/about' className={classes.a}>\r\n                        About\r\n                    </Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ProjBoard from \"../components/ProjBoard\";\r\nimport Home from \"../components/Home\";\r\nimport Navbar from \"../components/navbar/Navbar\";\r\nimport About from \"../components/pages/About\";\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Fragment>\r\n                <Navbar></Navbar>\r\n                <Switch>\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/:boardID\" component={ProjBoard} />\r\n                </Switch>\r\n\r\n            </Fragment>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { sort } from \"../actions\";\r\n\r\nimport ProjList from './ProjList';\r\nimport ProjCreate from \"./ProjCreate\";\r\nimport AppRouter from \"../routes\";\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <AppRouter />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"list-0\": {\r\n        id: \"list-0\",\r\n        cards: [\"card-0\"],\r\n        title: \"My Bucket\",\r\n        board: \"board-0\"\r\n    }\r\n};\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_LIST: {\r\n            const { title, id } = action.payload;\r\n            const newList = {\r\n                title: title,\r\n                id: `list-${id}`,\r\n                cards: []\r\n            };\r\n\r\n            const newState = { ...state, [`list-${id}`]: newList };\r\n\r\n            return newState;\r\n        }\r\n\r\n        case CONSTANTS.ADD_CARD: {\r\n            const { listID, id } = action.payload;\r\n            const list = state[listID];\r\n            list.cards.push(`card-${id}`);\r\n            return { ...state, [listID]: list };\r\n        }\r\n\r\n        case CONSTANTS.DRAG_HAPPENED:\r\n            const {\r\n                droppableIdStart,\r\n                droppableIdEnd,\r\n                droppableIndexEnd,\r\n                droppableIndexStart,\r\n\r\n                type\r\n            } = action.payload;\r\n\r\n            // draggin lists around - the listOrderReducer should handle this\r\n            if (type === \"list\") {\r\n                return state;\r\n            }\r\n\r\n            // in the same list\r\n            if (droppableIdStart === droppableIdEnd) {\r\n                const list = state[droppableIdStart];\r\n                const card = list.cards.splice(droppableIndexStart, 1);\r\n                list.cards.splice(droppableIndexEnd, 0, ...card);\r\n                return { ...state, [droppableIdStart]: list };\r\n            }\r\n\r\n            // other list\r\n            if (droppableIdStart !== droppableIdEnd) {\r\n                // find the list where the drag happened\r\n                const listStart = state[droppableIdStart];\r\n                // pull out the card from this list\r\n                const card = listStart.cards.splice(droppableIndexStart, 1);\r\n                // find the list where the drag ended\r\n                const listEnd = state[droppableIdEnd];\r\n\r\n                // put the card in the new list\r\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n                return {\r\n                    ...state,\r\n                    [droppableIdStart]: listStart,\r\n                    [droppableIdEnd]: listEnd\r\n                };\r\n            }\r\n            return state;\r\n\r\n        case CONSTANTS.DELETE_CARD: {\r\n            const { listID, id } = action.payload;\r\n\r\n            const list = state[listID];\r\n            const newCards = list.cards.filter(cardID => cardID !== id);\r\n\r\n            return { ...state, [listID]: { ...list, cards: newCards } };\r\n        }\r\n\r\n        case CONSTANTS.EDIT_LIST_TITLE: {\r\n            const { listID, newTitle } = action.payload;\r\n\r\n            const list = state[listID];\r\n            list.title = newTitle;\r\n            return { ...state, [listID]: list };\r\n        }\r\n\r\n        case CONSTANTS.DELETE_LIST: {\r\n            const { listID } = action.payload;\r\n            const newState = state;\r\n            delete newState[listID];\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"card-0\": {\r\n        text: \"Last Episode\",\r\n        id: `card-0`,\r\n        list: \"list-0\"\r\n    }\r\n};\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_CARD: {\r\n            const { text, listID, id } = action.payload;\r\n\r\n            const newCard = {\r\n                text,\r\n                id: `card-${id}`,\r\n                list: listID\r\n            };\r\n\r\n            return { ...state, [`card-${id}`]: newCard };\r\n        }\r\n        case CONSTANTS.EDIT_CARD: {\r\n            const { id, newText } = action.payload;\r\n            const card = state[id];\r\n            card.text = newText;\r\n            return { ...state, [`card-${id}`]: card };\r\n        }\r\n\r\n        case CONSTANTS.DELETE_CARD: {\r\n            const { id } = action.payload;\r\n            const newState = state;\r\n            delete newState[id];\r\n            return newState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n    \"board-0\": {\r\n        id: \"board-0\",\r\n        lists: [\"list-0\"],\r\n        title: 'My Panel'\r\n    }\r\n};\r\n\r\nconst boardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_LIST: {\r\n            const { boardID, id } = action.payload;\r\n            const board = state[boardID];\r\n            const newListID = `list-${id}`;\r\n            const newLists = [...board.lists, newListID];\r\n            board.lists = newLists;\r\n            return { ...state, [boardID]: board };\r\n        }\r\n\r\n        case CONSTANTS.DRAG_HAPPENED: {\r\n            const { boardID } = action.payload;\r\n            const board = state[boardID];\r\n            const lists = board.lists;\r\n            const {\r\n                droppableIndexEnd,\r\n                droppableIndexStart,\r\n\r\n                type\r\n            } = action.payload;\r\n\r\n            // draggin lists around\r\n            if (type === \"list\") {\r\n                const pulledOutList = lists.splice(droppableIndexStart, 1);\r\n                lists.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n                board.lists = lists;\r\n\r\n                return { ...state, [boardID]: board };\r\n            }\r\n            return state;\r\n        }\r\n        case CONSTANTS.DELETE_LIST: {\r\n            const { listID, boardID } = action.payload;\r\n            const board = state[boardID];\r\n            const lists = board.lists;\r\n            const newLists = lists.filter(id => id !== listID);\r\n            board.lists = newLists;\r\n            return { ...state, [boardID]: board };\r\n        }\r\n\r\n        case CONSTANTS.ADD_BOARD: {\r\n            const { title, id } = action.payload;\r\n            const newID = `board-${id}`;\r\n            const newBoard = {\r\n                id: newID,\r\n                title,\r\n                lists: []\r\n            };\r\n\r\n            return { ...state, [newID]: newBoard };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nconsole.log(uuid());\r\n\r\nconst initialState = [\"board-0\"];\r\n\r\nconst boardOrderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_BOARD: {\r\n            return [...state, `board-${action.payload.id}`];\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default boardOrderReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = null;\r\n\r\nconst activeBoardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.SET_ACTIVE_BOARD: {\r\n            return action.payload;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default activeBoardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport cardsReducer from \"./cardsReducer\";\r\nimport boardsReducer from \"./boardsReducer\";\r\nimport boardOrderReducer from \"./boardOrderReducer\";\r\nimport activeBoardReducer from \"./activeBoardReducer\";\r\n\r\nexport default combineReducers({\r\n    lists: listsReducer,\r\n    cards: cardsReducer,\r\n    boards: boardsReducer,\r\n    boardOrder: boardOrderReducer,\r\n    activeBoard: activeBoardReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nexport default () => {\r\n    let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n    let persistor = persistStore(store);\r\n    return { store, persistor };\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport Store from \"./store/store\";\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport $ from \"jquery\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#01579b',\r\n        },\r\n        secondary: {\r\n            main: '#404040',\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true\r\n    },\r\n});\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: #f0f0f0;\r\n    box-sizing: border-box;\r\n    transition: all 0.5s ease-in;\r\n  }\r\n`;\r\n\r\n\r\nconst { persistor, store } = Store();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <GlobalStyle />\r\n            <MuiThemeProvider theme={theme}>\r\n                <App />\r\n            </MuiThemeProvider>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function (e) {\r\n    console.log(\"Removed: \" + e.target.nodeName);\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}